# vim:ft=make
OCAMLC     = ocamlfind ocamlc -thread
OCAMLOPT   = ocamlfind ocamlopt -thread
OCAMLDEP   = ocamlfind ocamldep
OCAMLDOC   = ocamlfind ocamldoc -html -colorize-code -thread -sort -stars
OCAMLMKTOP = ocamlfind ocamlmktop -thread -g
QTEST      = qtest
DOCDIR    ?= doc/
WARNS      = -w -40-31+27
override OCAMLOPTFLAGS += $(INCS) $(WARNS) -g -bin-annot
override OCAMLFLAGS    += $(INCS) $(WARNS) -g -bin-annot

CAMLINCLUDE = $(shell ocamlfind printconf stdlib)
CPPFLAGS   += -I $(CAMLINCLUDE) -I .
CFLAGS     += -O2 -std=c99 -W -Wall -D_GNU_SOURCE

all:

.PHONY: all clean clean-spec install uninstall reinstall doc check clear

ifdef PKG_NAME
OBJECTS  = $(SOURCES:.ml=.cmo)
XOBJECTS = $(OBJECTS:.cmo=.cmx)
ARCHIVE  = $(PKG_NAME).cma
XARCHIVE = $(ARCHIVE:.cma=.cmxa)

$(ARCHIVE): $(OBJECTS) $(CLIB)
	$(OCAMLC) $(CLIB) -package "$(REQUIRES)" -custom -linkpkg $(OCAMLFLAGS) $(OBJECTS) $(LIBS) -a -o $@

# Note: CLIB_SHORT is required for the lib to be recorded in the cmxa file
# (ocamlopt does not record required C libs unless -cclib is used)
$(XARCHIVE): $(XOBJECTS) $(CLIB)
	$(OCAMLOPT) -cclib -l$(CLIB_SHORT) -package "$(REQUIRES)" $(OCAMLOPTFLAGS) $(XOBJECTS) $(LIBS) -a -o $@

install: $(ARCHIVE)
	if test -f "$(XARCHIVE)" ; then extra="$(XARCHIVE) $(XARCHIVE:.cmxa=.a)" ; fi ; \
	ocamlfind install "$(PKG_NAME)" *.cmi *.cmx *.cmo $(PKG_NAME).a $(CLIB) "$(ARCHIVE)" META $$extra

uninstall:
	ocamlfind remove $(PKG_NAME)

reinstall: uninstall install
endif

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx .opt .byte .ml_test .cmo_test .cmx_test .byte_test .opt_test

%.byte: $(ARCHIVE) %.cmo
	$(OCAMLC) -o $@ -package "$(REQUIRES)" $(OCAMLFLAGS) $^

%.opt: $(XARCHIVE) %.cmx
	$(OCAMLOPT) -o $@ -I . -linkpkg -package "$(REQUIRES)" $(OCAMLOPTFLAGS) $^

%.cmo %.annot: %.ml
	$(OCAMLC) -package "$(REQUIRES)" $(OCAMLFLAGS) -c $<

%.cmi: %.mli
	$(OCAMLC) -package "$(REQUIRES)" $(OCAMLFLAGS) -c $<

%.cmx: %.ml
	$(OCAMLOPT) -package "$(REQUIRES)" $(OCAMLOPTFLAGS) -c $<

# Tests with qtest

all_tests.byte: all_tests.cmo $(ARCHIVE)
	$(OCAMLC)   -o $@ -package "$(REQUIRES) qcheck" $(ARCHIVE) -linkpkg $(OCAMLFLAGS) $<

all_tests.cmo: all_tests.ml $(OBJECTS)
	$(OCAMLC) -package "$(REQUIRES) qcheck" $(OCAMLFLAGS) -w -33 -c -impl $<

all_tests.opt: all_tests.cmx $(XARCHIVE)
	$(OCAMLOPT) -o $@ -package "$(REQUIRES) qcheck" $(XARCHIVE) -linkpkg $(OCAMLOPTFLAGS) $<

all_tests.cmx: all_tests.ml $(XOBJECTS)
	$(OCAMLOPT) -package "$(REQUIRES) qcheck" $(OCAMLOPTFLAGS) -w -33 -c -impl $<

all_tests.ml: $(SOURCES)
	$(QTEST) --shuffle --preamble 'open Batteries;; open Bitstring;; open Tools' -o $@ extract $^

check: all_tests.opt
	@for t in $^; do \
		echo "Running $$t" ;\
		./$$t ;\
	done

# Clean up
clean: clean-spec
	rm -f *.cm[ioxa] *.cmxa *.a *.s *.o *.byte *.opt *.top *.annot .depend all_tests.* *.cache *.log

# Dependencies
.depend:
	$(OCAMLDEP) -package "$(REQUIRES)" -I .. *.ml *.mli */*.ml > $@

doc: $(SOURCES)
	@echo "Building doc in $(DOCDIR)..."
	mkdir -p $(DOCDIR)
	$(OCAMLDOC) -package "$(REQUIRES)" -d $(DOCDIR) $^
	sed -i -e '/^<head>/a<link href="http://fonts.googleapis.com/css?family=Rosarivo:400,400italic|Happy+Monkey|Electrolize" rel="stylesheet" type="text/css">' $(DOCDIR)/*.html
	sed -i -e 's|<center><h1></h1></center>|<h1>$(PKG_NAME)</h1>|' $(DOCDIR)/index.html

clear: $(SOURCES)
	sed -i -e 's/[ 	]\+$$//' $^

-include .depend
