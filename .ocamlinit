(*
#require "findlib";;
Toploop.use_silently
	Format.err_formatter (Filename.concat (Findlib.package_directory "batteries") "battop.ml");;
*)
#require "bitstring";;
#require "batteries.pa_string.syntax";;
#camlp4o;;

open Batteries;;
open Bitstring;;
open Tools;;

let colorize =
    Format.set_tags true ;
    Format.set_mark_tags false ;
    let def_funs = Format.get_formatter_tag_functions () in
    let colorize = function
        | "addr" | "time" | "proto" | "port" | "seqnum" | "code" -> Format.printf "\027[1;35m"
        | "bits" | "flags" -> Format.printf "\027[1;34m"
        | x -> def_funs.Format.print_open_tag x
    and uncolorize = function
        | "addr" | "time" | "proto" | "port" | "seqnum" | "code" | "bits" | "flags" -> Format.printf "\027[0m"
        | x -> def_funs.Format.print_close_tag x in
    Format.set_formatter_tag_functions { def_funs with
        Format.print_open_tag = colorize ;
        Format.print_close_tag = uncolorize
    } ;;

#install_printer Tools.Payload.print;;
#install_printer Tools.print_bitstring;;
#install_printer Tcp.Port.print;;
#install_printer Tcp.SeqNum.print;;
#install_printer Tcp.Pdu.print_flags;;
#install_printer Udp.Port.print;;
#install_printer Arp.HwProto.print;;
#install_printer Arp.Op.print;;
#install_printer Arp.HwType.print;;
#install_printer Eth.Addr.print;;
#install_printer Ip.Proto.print;;
#install_printer Ip.Addr.print;;
#install_printer Dhcp.MsgType.print;;
#install_printer Dns.QType.print;;
#install_printer Pcap.Dlt.print;;

